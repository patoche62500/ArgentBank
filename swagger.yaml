swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
      # - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/transactions:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Return User Transactions
      description: API for transaction
      parameters:
        - in: header
          name: Authorization
          description: Token
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Returns an array of transactions
          schema:
            $ref: "#/definitions/Transactions"
        "400":
          description: Invalid Token
        "500":
          description: Internal Server Error
  /user/transaction/{id}:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Return User details Transaction by ID
      description: API for transaction
      parameters:
        - in: path
          name: id
          required: true
          type: integer
        - in: header
          name: Authorization
          description: Token
          required: true
          type: string

      produces:
        - application/json
      responses:
        "200":
          description: return transaction detail Successfully
          schema:
            $ref: "#/definitions/TransactionIdResponse"
        "300":
          description: Invalid Token
        "400":
          description: Invalid ID
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Modify Category & Note
      description: API for transaction
      parameters:
        - in: path
          name: id
          required: true
          type: integer
        - in: header
          name: Authorization
          description: Token
          required: true
          type: string
        - in: body
          name: body
          description: Modify transaction
          required: true
          schema:
            $ref: "#/definitions/TransactionModify"
      produces:
        - application/json
      responses:
        "200":
          description: Updated Successfully
        "300":
          description: Invalid Token
        "400":
          description: Invalid ID
        "500":
          description: Internal Server Error
  /category:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Return all User Transaction Category
      description: API for transaction
      parameters:
        - in: header
          name: Authorization
          description: Token
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: return array Successfully
          schema:
            $ref: "#/definitions/Category"
        "400":
          description: Invalid Token
        "500":
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  Transactions:
    type: array
    items:
      $ref: "#/definitions/Transaction"
  Transaction:
    type: object
    properties:
      id:
        type: integer
      date:
        type: string
      description:
        type: string
      amount:
        type: integer
      balance:
        type: integer
  TransactionIdResponse:
    type: object
    properties:
      id:
        type: integer
      transaction type:
        type: string
      category:
        type: string
      note:
        type: string
  TransactionModify:
    type: object
    properties:
      category:
        type: string
      note:
        type: string
  Category:
    type: array
    items:
      properties:
        category:
          type: string
